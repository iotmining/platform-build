name: Release BOM & Parent to GitHub Packages

on:
  push:
    branches: [ main ]                 # keep while testing
    tags: ['20*.*.*', '2025.*']        # release tags e.g. 2025.08.13
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Injects <server id="github"> into a settings.xml and returns its path
      - name: Setup Java 21 (with publish server creds)
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: 'maven'
          server-id: github                      # MUST match <distributionManagement><repository><id>
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      # 2) Sanity-check that <server id="github"> exists in that settings file
      - name: Verify Maven server creds present
        run: |
          echo "Settings at: ${{ steps.setup-java.outputs.settings-path }}"
          grep -A2 '<id>github</id>' "${{ steps.setup-java.outputs.settings-path }}" || (echo "Missing <server id=\"github\">" && exit 1)

      # 3) Ensure your POMs are pointing at the right repo URL
      - name: Show distributionManagement URLs (debug)
        run: |
          echo "---- iotmining-bom/pom.xml ----"
          xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 \
            -t -m "/x:project/x:distributionManagement/*/x:url" -v . -n iotmining-bom/pom.xml || true
          echo "---- iotmining-parent/pom.xml ----"
          xmlstarlet sel -N x=http://maven.apache.org/POM/4.0.0 \
            -t -m "/x:project/x:distributionManagement/*/x:url" -v . -n iotmining-parent/pom.xml || true
        shell: bash
      - name: Install xmlstarlet (only used above; safe to remove later)
        if: failure()    # install only if previous step failed due to missing xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet

      # 4) Deploy BOM first (explicitly use the exact settings path)
      - name: Deploy BOM
        run: mvn -B -s "${{ steps.setup-java.outputs.settings-path }}" -DskipTests clean deploy -f iotmining-bom/pom.xml

      # 5) Deploy Parent (imports the BOM)
      - name: Deploy Parent
        run: mvn -B -s "${{ steps.setup-java.outputs.settings-path }}" -DskipTests clean deploy -f iotmining-parent/pom.xml

      # 6) OPTIONAL fallback: if 401 persists, try with a PAT (create org/repo secret GH_PACKAGES_TOKEN)
      - name: Retry deploy with PAT (fallback)
        if: failure() && secrets.GH_PACKAGES_TOKEN != ''
        env:
          SETTINGS: ${{ steps.setup-java.outputs.settings-path }}
          GH_ACTOR: ${{ github.actor }}
          GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}   # must have write:packages; if org requires SSO, enable it for this PAT
        run: |
          echo "Using PAT fallback..."
          # Append a server block with PAT (donâ€™t overwrite existing settings)
          TMPSET="$RUNNER_TEMP/settings.xml"
          cp "$SETTINGS" "$TMPSET"
          awk '1; /<servers>/ && !p {print "  <server><id>github</id><username>'"$GH_ACTOR"'</username><password>'"$GH_PAT"'</password></server>"; p=1}' "$TMPSET" > "$TMPSET.new" || cp "$TMPSET" "$TMPSET.new"
          mv "$TMPSET.new" "$TMPSET"

          mvn -B -s "$TMPSET" -DskipTests clean deploy -f iotmining-bom/pom.xml || true
          mvn -B -s "$TMPSET" -DskipTests clean deploy -f iotmining-parent/pom.xml
