name: Release BOM & Parent to GitHub Packages

on:
  push:
    branches: [ main ]                 # keep during testing
    tags: ['20*.*.*', '2025.*']        # e.g., 2025.08.14
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

# Expose a boolean so we can branch without referencing secrets directly in `if:`
env:
  HAS_PAT: ${{ secrets.GH_PACKAGES_TOKEN != '' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Injects <server id="github"> credentials into Maven settings.xml
      - name: Setup Java 21 (with publish server creds)
        id: setup-java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          server-id: github                      # MUST match <distributionManagement><repository><id>
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      - name: Show which settings.xml is used
        run: |
          echo "Settings path: ${{ steps.setup-java.outputs.settings-path }}"
          grep -A2 '<id>github</id>' "${{ steps.setup-java.outputs.settings-path }}" || (echo "No <server id=\"github\"> found" && exit 1)

      # Deploy BOM first
      - name: Deploy BOM
        run: mvn -B -s "${{ steps.setup-java.outputs.settings-path }}" -DskipTests clean deploy -f iotmining-bom/pom.xml

      # Then Parent (imports the BOM)
      - name: Deploy Parent
        run: mvn -B -s "${{ steps.setup-java.outputs.settings-path }}" -DskipTests clean deploy -f iotmining-parent/pom.xml

      # Optional fallback: retry with a Personal Access Token if org policies block GITHUB_TOKEN
      # Create repo/org secret: GH_PACKAGES_TOKEN (write:packages; SSO enabled if required)
      - name: Retry deploy with PAT fallback
        if: ${{ failure() && env.HAS_PAT == 'true' }}
        env:
          SETTINGS_PATH: ${{ steps.setup-java.outputs.settings-path }}
          GH_ACTOR: ${{ github.actor }}
          GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          echo "FALLBACK: retrying deploy with PAT..."
          cp "$SETTINGS_PATH" "$RUNNER_TEMP/settings.xml"
          # Append/ensure a <server id="github"> block with the PAT
          awk '1' "$RUNNER_TEMP/settings.xml" > "$RUNNER_TEMP/settings.patched.xml"
          # If a server block exists, replace password; else, add a new server
          if grep -q '<servers>' "$RUNNER_TEMP/settings.patched.xml"; then
            # naive replace/add (keeps things simple for CI)
            sed -i "s#<id>github</id>\\(.*\\n\\)*\\s*</server>#<id>github</id><username>${GH_ACTOR}</username><password>${GH_PAT}</password></server>#g" "$RUNNER_TEMP/settings.patched.xml" || true
          else
            sed -i "s#</settings>#  <servers>\n    <server><id>github</id><username>${GH_ACTOR}</username><password>${GH_PAT}</password></server>\n  </servers>\n</settings>#g" "$RUNNER_TEMP/settings.patched.xml"
          fi

          mvn -B -s "$RUNNER_TEMP/settings.patched.xml" -DskipTests clean deploy -f iotmining-bom/pom.xml || true
          mvn -B -s "$RUNNER_TEMP/settings.patched.xml" -DskipTests clean deploy -f iotmining-parent/pom.xml
