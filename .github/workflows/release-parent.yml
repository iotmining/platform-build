name: Release BOM & Parent to GitHub Packages

on:
  push:
    branches: [ main ]                 # keep during testing
    tags: ['20*.*.*', '2025.*']        # e.g., 2025.08.14
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

# Optional PAT fallback: set GH_PACKAGES_TOKEN secret if your org blocks GITHUB_TOKEN
env:
  HAS_PAT: ${{ secrets.GH_PACKAGES_TOKEN != '' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Write <server id="github"> credentials into ~/.m2/settings.xml
      - name: Setup Java 21 (with publish server creds)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          server-id: github                      # MUST match <distributionManagement><repository><id>
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      # Debug: confirm the settings file exists & contains the server
      - name: Check Maven settings
        run: |
          echo "Using settings at: $HOME/.m2/settings.xml"
          test -f "$HOME/.m2/settings.xml" || (echo "settings.xml missing" && exit 1)
          grep -A2 '<id>github</id>' "$HOME/.m2/settings.xml" || (echo "No <server id=\"github\"> found" && exit 1)

      # Deploy BOM first
      - name: Deploy BOM
        run: mvn -B -s "$HOME/.m2/settings.xml" -DskipTests clean deploy -f iotmining-bom/pom.xml

      # Then Parent (imports the BOM)
      - name: Deploy Parent
        run: mvn -B -s "$HOME/.m2/settings.xml" -DskipTests clean deploy -f iotmining-parent/pom.xml

      # Optional fallback with PAT (write:packages; enable SSO if your org requires it)
      - name: Retry deploy with PAT fallback
        if: ${{ failure() && env.HAS_PAT == 'true' }}
        env:
          GH_ACTOR: ${{ github.actor }}
          GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          echo "FALLBACK: retrying deploy with PAT..."
          cp "$HOME/.m2/settings.xml" "$RUNNER_TEMP/settings.xml"

          # If <servers> block exists, ensure/replace github server; else add it.
          if grep -q '<servers>' "$RUNNER_TEMP/settings.xml"; then
            # Remove existing github server block (simple approach), then append a fresh one
            awk '
              BEGIN{skip=0}
              /<server>/ {inserver=1}
              inserver && /<id>github<\/id>/ {skip=1}
              inserver && /<\/server>/ { if(skip){skip=0; inserver=0; next} else {inserver=0} }
              { if(!skip) print }
            ' "$RUNNER_TEMP/settings.xml" > "$RUNNER_TEMP/settings.pruned.xml"
            mv "$RUNNER_TEMP/settings.pruned.xml" "$RUNNER_TEMP/settings.xml"
            # Append github server inside <servers>
            sed -i "s#</servers>#  <server><id>github</id><username>${GH_ACTOR}</username><password>${GH_PAT}</password></server>\n  </servers>#g" "$RUNNER_TEMP/settings.xml"
          else
            # Add a new <servers> block
            sed -i "s#</settings>#  <servers>\n    <server><id>github</id><username>${GH_ACTOR}</username><password>${GH_PAT}</password></server>\n  </servers>\n</settings>#g" "$RUNNER_TEMP/settings.xml"
          fi

          mvn -B -s "$RUNNER_TEMP/settings.xml" -DskipTests clean deploy -f iotmining-bom/pom.xml || true
          mvn -B -s "$RUNNER_TEMP/settings.xml" -DskipTests clean deploy -f iotmining-parent/pom.xml
