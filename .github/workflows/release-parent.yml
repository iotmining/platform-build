name: Release BOM & Parent to GitHub Packages

on:
  push:
    tags: ['20*.*.*', '2025.*']       # release tags e.g., 2025.08.16
  workflow_dispatch: {}

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      GH_REPO: ${{ github.repository }}             # e.g., iotmining/platform-build
      HAS_PAT: ${{ secrets.GH_PACKAGES_TOKEN != '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 21 (and Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          # we’ll pass our own settings.xml to mvn (-s), so these server-* are not relied on
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: ${{ secrets.GITHUB_TOKEN }}

      # Write a clean settings.xml and use it for ALL mvn runs (-s).
      - name: Write clean Maven settings for GitHub Packages
        env:
          GH_ACTOR: ${{ github.actor }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SETTINGS="$RUNNER_TEMP/gpr-settings.xml"
          cat > "$SETTINGS" <<XML
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${GH_ACTOR}</username>
                <password>${GH_TOKEN}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>github-packages</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/${{ env.GH_REPO }}</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </repository>
                </repositories>
                <pluginRepositories>
                  <pluginRepository>
                    <id>github-plugins</id>
                    <url>https://maven.pkg.github.com/${{ env.GH_REPO }}</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </pluginRepository>
                </pluginRepositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github-packages</activeProfile>
            </activeProfiles>
          </settings>
          XML
          echo "GPR_SETTINGS=$SETTINGS" >> "$GITHUB_ENV"

      - name: Install XML tools (for version alignment)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libxml2-utils xmlstarlet

      # Align POM versions with the tag (only on tag builds)
      - name: Align versions with tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG="${GITHUB_REF##*/}"
          echo "Tag is: ${TAG}"

          BOM_POM="iotmining-bom/pom.xml"
          PARENT_POM="iotmining-parent/pom.xml"

          BOM_VER=$(xmllint --xpath "string(/project/version)" "$BOM_POM")
          PARENT_VER=$(xmllint --xpath "string(/project/version)" "$PARENT_POM")
          IMPORT_VER=$(xmllint --xpath "string(//dependency[artifactId='iotmining-bom']/version)" "$PARENT_POM")

          if [[ "$BOM_VER" != "$TAG" ]]; then
            mvn -q -N -f "$BOM_POM" versions:set -DnewVersion="$TAG" -DgenerateBackupPoms=false
          fi
          if [[ "$PARENT_VER" != "$TAG" ]]; then
            mvn -q -N -f "$PARENT_POM" versions:set -DnewVersion="$TAG" -DgenerateBackupPoms=false
          fi
          if [[ "$IMPORT_VER" != "$TAG" ]]; then
            xmlstarlet ed -P -L \
              -u "//dependency[artifactId='iotmining-bom']/version" -v "$TAG" \
              "$PARENT_POM"
          fi

          echo "Post-update check:"
          xmllint --xpath "concat('BOM=',/project/version,'\n')" "$BOM_POM"
          xmllint --xpath "concat('PARENT=',/project/version,'\n')" "$PARENT_POM"
          xmllint --xpath "concat('IMPORT=',//dependency[artifactId='iotmining-bom']/version,'\n')" "$PARENT_POM"

      # ---- Critical: install the BOM locally BEFORE anything that imports it ----
      - name: Install BOM locally
        run: mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always -f iotmining-bom/pom.xml clean install

      # Tag: deploy to GH Packages; Branch: just verify
      - name: Build/Publish BOM
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
                -DdeployAtEnd=false -Dmaven.deploy.skip=false \
                -f iotmining-bom/pom.xml \
                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
          else
            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
                -f iotmining-bom/pom.xml verify
          fi

      - name: Build/Publish Parent
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
                -DdeployAtEnd=false -Dmaven.deploy.skip=false \
                -f iotmining-parent/pom.xml \
                clean org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
          else
            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
                -f iotmining-parent/pom.xml clean verify
          fi

      # Optional fallback if org policy blocks GITHUB_TOKEN for packages
      - name: Retry with PAT fallback
        if: ${{ failure() && env.HAS_PAT == 'true' }}
        env:
          GH_ACTOR: ${{ github.actor }}
          GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          echo "FALLBACK: retrying deploy with PAT…"
          SETTINGS="$RUNNER_TEMP/gpr-settings-pat.xml"
          cat > "$SETTINGS" <<XML
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>github</id>
                <username>${GH_ACTOR}</username>
                <password>${GH_PAT}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>github-packages</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/${{ env.GH_REPO }}</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </repository>
                </repositories>
                <pluginRepositories>
                  <pluginRepository>
                    <id>github-plugins</id>
                    <url>https://maven.pkg.github.com/${{ env.GH_REPO }}</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </pluginRepository>
                </pluginRepositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github-packages</activeProfile>
            </activeProfiles>
          </settings>
          XML

          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            mvn -B -s "$SETTINGS" -DskipTests -Dstyle.color=always \
                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
                -f iotmining-bom/pom.xml \
                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy

            mvn -B -s "$SETTINGS" -DskipTests -Dstyle.color=always \
                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
                -f iotmining-parent/pom.xml \
                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
          else
            echo "Branch build failed earlier; PAT fallback only applies to tag publishes. Skipping."
          fi



#name: Release BOM & Parent to GitHub Packages
#
#on:
#  push:
#    branches: [ main ]                   # keep during testing
#    tags: ['20*.*.*', '2025.*']          # e.g., 2025.08.16
#  workflow_dispatch: {}
#
#concurrency:
#  group: publish-${{ github.ref }}
#  cancel-in-progress: false
#
#jobs:
#  deploy:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#
#    env:
#      GH_REPO: ${{ github.repository }}                # e.g., iotmining/platform-build
#      HAS_PAT: ${{ secrets.GH_PACKAGES_TOKEN != '' }}
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Setup Java 21 (and Maven cache)
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: '21'
#          cache: maven
#          server-id: github
#          server-username: GITHUB_ACTOR
#          server-password: ${{ secrets.GITHUB_TOKEN }}
#
#      # Write a clean settings file and use it for ALL mvn runs (-s).
#      - name: Write clean Maven settings for GitHub Packages
#        env:
#          GH_ACTOR: ${{ github.actor }}
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          SETTINGS="$RUNNER_TEMP/gpr-settings.xml"
#          cat > "$SETTINGS" <<XML
#          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
#                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
#                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
#            <servers>
#              <server>
#                <id>github</id>
#                <username>${GH_ACTOR}</username>
#                <password>${GH_TOKEN}</password>
#              </server>
#            </servers>
#            <profiles>
#              <profile>
#                <id>github-packages</id>
#                <repositories>
#                  <repository>
#                    <id>github</id>
#                    <url>https://maven.pkg.github.com/${GH_REPO}</url>
#                    <releases><enabled>true</enabled></releases>
#                    <snapshots><enabled>true</enabled></snapshots>
#                  </repository>
#                </repositories>
#                <pluginRepositories>
#                  <pluginRepository>
#                    <id>github-plugins</id>
#                    <url>https://maven.pkg.github.com/${GH_REPO}</url>
#                    <releases><enabled>true</enabled></releases>
#                    <snapshots><enabled>true</enabled></snapshots>
#                  </pluginRepository>
#                </pluginRepositories>
#              </profile>
#            </profiles>
#            <activeProfiles>
#              <activeProfile>github-packages</activeProfile>
#            </activeProfiles>
#          </settings>
#          XML
#          echo "GPR_SETTINGS=$SETTINGS" >> "$GITHUB_ENV"
#
#      - name: Install XML tools for version checks
#        run: |
#          sudo apt-get update -y
#          sudo apt-get install -y libxml2-utils xmlstarlet
#
#      # Align POM versions with the tag (only on tag builds)
#      - name: Align versions with tag
#        if: startsWith(github.ref, 'refs/tags/')
#        run: |
#          TAG="${GITHUB_REF##*/}"
#          echo "Tag is: ${TAG}"
#
#          BOM_POM="iotmining-bom/pom.xml"
#          PARENT_POM="iotmining-parent/pom.xml"
#
#          BOM_VER=$(xmllint --xpath "string(/project/version)" "$BOM_POM")
#          PARENT_VER=$(xmllint --xpath "string(/project/version)" "$PARENT_POM")
#          IMPORT_VER=$(xmllint --xpath "string(//dependency[artifactId='iotmining-bom']/version)" "$PARENT_POM")
#
#          if [[ "$BOM_VER" != "$TAG" ]]; then
#            mvn -q -N -f "$BOM_POM" versions:set -DnewVersion="$TAG" -DgenerateBackupPoms=false
#          fi
#          if [[ "$PARENT_VER" != "$TAG" ]]; then
#            mvn -q -N -f "$PARENT_POM" versions:set -DnewVersion="$TAG" -DgenerateBackupPoms=false
#          fi
#          if [[ "$IMPORT_VER" != "$TAG" ]]; then
#            xmlstarlet ed -P -L \
#              -u "//dependency[artifactId='iotmining-bom']/version" -v "$TAG" \
#              "$PARENT_POM"
#          fi
#
#          echo "Post-update check:"
#          xmllint --xpath "concat('BOM=',/project/version,'\n')" "$BOM_POM"
#          xmllint --xpath "concat('PARENT=',/project/version,'\n')" "$PARENT_POM"
#          xmllint --xpath "concat('IMPORT=',//dependency[artifactId='iotmining-bom']/version,'\n')" "$PARENT_POM"
#
#      # ---- CRITICAL: Install the BOM locally BEFORE anything that imports it ----
#      - name: Install BOM locally (ensures import is resolvable)
#        run: mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always -f iotmining-bom/pom.xml clean install
#
#      # Tag: deploy; Branch: verify
#      - name: Build/Publish BOM
#        run: |
#          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
#            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
#                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
#                -DdeployAtEnd=false -Dmaven.deploy.skip=false \
#                -f iotmining-bom/pom.xml \
#                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
#          else
#            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
#                -f iotmining-bom/pom.xml verify
#          fi
#
#      - name: Build/Publish Parent
#        run: |
#          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
#            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
#                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
#                -DdeployAtEnd=false -Dmaven.deploy.skip=false \
#                -f iotmining-parent/pom.xml \
#                clean org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
#          else
#            mvn -B -s "$GPR_SETTINGS" -DskipTests -Dstyle.color=always \
#                -f iotmining-parent/pom.xml clean verify
#          fi
#
#      # Optional fallback if org policy blocks GITHUB_TOKEN for packages
#      - name: Retry with PAT fallback
#        if: ${{ failure() && env.HAS_PAT == 'true' }}
#        env:
#          GH_ACTOR: ${{ github.actor }}
#          GH_PAT: ${{ secrets.GH_PACKAGES_TOKEN }}
#        run: |
#          echo "FALLBACK: retrying deploy with PAT…"
#          SETTINGS="$RUNNER_TEMP/gpr-settings-pat.xml"
#          cat > "$SETTINGS" <<XML
#          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
#                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
#                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd">
#            <servers>
#              <server>
#                <id>github</id>
#                <username>${GH_ACTOR}</username>
#                <password>${GH_PAT}</password>
#              </server>
#            </servers>
#            <profiles>
#              <profile>
#                <id>github-packages</id>
#                <repositories>
#                  <repository>
#                    <id>github</id>
#                    <url>https://maven.pkg.github.com/${GH_REPO}</url>
#                    <releases><enabled>true</enabled></releases>
#                    <snapshots><enabled>true</enabled></snapshots>
#                  </repository>
#                </repositories>
#                <pluginRepositories>
#                  <pluginRepository>
#                    <id>github-plugins</id>
#                    <url>https://maven.pkg.github.com/${GH_REPO}</url>
#                    <releases><enabled>true</enabled></releases>
#                    <snapshots><enabled>true</enabled></snapshots>
#                  </pluginRepository>
#                </pluginRepositories>
#              </profile>
#            </profiles>
#            <activeProfiles>
#              <activeProfile>github-packages</activeProfile>
#            </activeProfiles>
#          </settings>
#          XML
#
#          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
#            mvn -B -s "$SETTINGS" -DskipTests -Dstyle.color=always \
#                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
#                -f iotmining-bom/pom.xml \
#                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
#
#            mvn -B -s "$SETTINGS" -DskipTests -Dstyle.color=always \
#                -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${GH_REPO} \
#                -f iotmining-parent/pom.xml \
#                org.apache.maven.plugins:maven-deploy-plugin:3.1.3:deploy
#          else
#            echo "Branch build failed earlier; PAT fallback only applies to tag publishes. Skipping."
#          fi
