<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.iotmining.build</groupId>
    <artifactId>iotmining-bom</artifactId>
    <version>2025.08.13</version>
    <packaging>pom</packaging>
    <name>IoTMining BOM</name>
    <description>Central dependency version alignment for all IoTMining services.</description>

    <properties>
        <!-- Core stack (align with Spring matrix) -->
        <java.version>21</java.version>
        <spring.boot.version>3.5.4</spring.boot.version>
        <spring.cloud.version>2025.0.0</spring.cloud.version>

        <!-- BOMs -->
        <testcontainers.bom.version>1.20.3</testcontainers.bom.version>
        <micrometer.tracing.version>1.3.3</micrometer.tracing.version>
        <jackson.bom.version>2.17.2</jackson.bom.version>

        <!-- Data & infra -->
        <flyway.version>10.16.0</flyway.version>
        <postgres.version>42.7.4</postgres.version>
        <mysql.version>9.1.0</mysql.version>
        <mongo.driver.version>5.2.1</mongo.driver.version>
        <redis.lettuce.version>6.3.2.RELEASE</redis.lettuce.version>
        <kafka.clients.version>3.8.0</kafka.clients.version>
        <rabbitmq.client.version>5.21.0</rabbitmq.client.version>
        <minio.version>8.5.9</minio.version>
        <elasticsearch.client.version>8.15.2</elasticsearch.client.version>

        <!-- Serialization -->
        <protobuf.version>3.25.3</protobuf.version>
        <confluent.avro.version>7.7.1</confluent.avro.version>

        <!-- Security -->
        <jjwt.version>0.12.5</jjwt.version>
        <bouncycastle.version>1.78.1</bouncycastle.version>
        <passay.version>1.7.4</passay.version>

        <!-- Utils -->
        <mapstruct.version>1.6.2</mapstruct.version>
        <caffeine.version>3.1.8</caffeine.version>
        <commons.lang3.version>3.14.0</commons.lang3.version>
        <problem.spring.version>0.29.1</problem.spring.version>
        <logstash.encoder.version>7.4</logstash.encoder.version>
        <logbook.version>3.8.0</logbook.version>

        <!-- Testing -->
        <junit.jupiter.version>5.10.3</junit.jupiter.version>
        <assertj.version>3.25.3</assertj.version>
        <mockito.version>5.12.0</mockito.version>
        <wiremock.version>3.9.2</wiremock.version>
        <restassured.version>5.5.0</restassured.version>
        <awaitility.version>4.2.1</awaitility.version>
        <archunit.version>1.3.0</archunit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring BOMs -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Observability -->
            <dependency>
                <groupId>io.micrometer</groupId>
                <artifactId>micrometer-tracing-bom</artifactId>
                <version>${micrometer.tracing.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Testcontainers BOM -->
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Jackson BOM -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Core libs (versions here, services omit) -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mysql</groupId>
                <artifactId>mysql-connector-j</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongodb-driver-sync</artifactId>
                <version>${mongo.driver.version}</version>
            </dependency>
            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>${redis.lettuce.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.clients.version}</version>
            </dependency>
            <dependency>
                <groupId>com.rabbitmq</groupId>
                <artifactId>amqp-client</artifactId>
                <version>${rabbitmq.client.version}</version>
            </dependency>
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>
            <dependency>
                <groupId>co.elastic.clients</groupId>
                <artifactId>elasticsearch-java</artifactId>
                <version>${elasticsearch.client.version}</version>
            </dependency>

            <!-- Serialization / schema -->
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-avro-serializer</artifactId>
                <version>${confluent.avro.version}</version>
            </dependency>
            <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>kafka-schema-registry-client</artifactId>
                <version>${confluent.avro.version}</version>
            </dependency>

            <!-- Security -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.passay</groupId>
                <artifactId>passay</artifactId>
                <version>${passay.version}</version>
            </dependency>

            <!-- Errors / logging -->
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>problem-spring-web-starter</artifactId>
                <version>${problem.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>net.logstash.logback</groupId>
                <artifactId>logstash-logback-encoder</artifactId>
                <version>${logstash.encoder.version}</version>
            </dependency>
            <dependency>
                <groupId>org.zalando</groupId>
                <artifactId>logbook-spring-boot-starter</artifactId>
                <version>${logbook.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>

            <!-- Testing stack -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock-standalone</artifactId>
                <version>${wiremock.version}</version>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${restassured.version}</version>
            </dependency>
            <dependency>
                <groupId>org.awaitility</groupId>
                <artifactId>awaitility</artifactId>
                <version>${awaitility.version}</version>
            </dependency>
            <dependency>
                <groupId>com.tngtech.archunit</groupId>
                <artifactId>archunit-junit5</artifactId>
                <version>${archunit.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Packages (platform-build)</name>
            <url>https://maven.pkg.github.com/iotmining/platform-build</url>
        </repository>
        <snapshotRepository>
            <id>github</id>
            <name>GitHub Packages (platform-build snapshots)</name>
            <url>https://maven.pkg.github.com/iotmining/platform-build</url>
        </snapshotRepository>
    </distributionManagement>


</project>
